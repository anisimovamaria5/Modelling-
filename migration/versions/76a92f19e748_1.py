"""Initial revision

Revision ID: 76a92f19e748
Revises: 
Create Date: 2025-05-23 10:55:42.599008

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '76a92f19e748'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('COMPANY',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица недропользователей'
    )
    op.create_table('EQ_COMPRESSOR_TYPE_COMP_RATIO',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица номинальных значений степеней сжатия'
    )
    op.create_table('EQ_COMPRESSOR_TYPE_FREQ_NOMINAL',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица номинальных значений частот'
    )
    op.create_table('EQ_COMPRESSOR_TYPE_POWER',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица номинальных значений мощностей'
    )
    op.create_table('EQ_COMPRESSOR_TYPE_PRESSURE_OUT',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица номинальных значений выходных давлений'
    )
    op.create_table('UOM',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uom_code', sa.String(), nullable=True, comment='Код размерности'),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица размерностей'
    )
    op.create_table('EQ_COMPRESSOR_TYPE',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('press_out_id', sa.Integer(), nullable=True),
    sa.Column('comp_ratio_id', sa.Integer(), nullable=True),
    sa.Column('freq_nominal_id', sa.Integer(), nullable=True),
    sa.Column('power_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['comp_ratio_id'], ['EQ_COMPRESSOR_TYPE_COMP_RATIO.id'], ),
    sa.ForeignKeyConstraint(['freq_nominal_id'], ['EQ_COMPRESSOR_TYPE_FREQ_NOMINAL.id'], ),
    sa.ForeignKeyConstraint(['power_id'], ['EQ_COMPRESSOR_TYPE_POWER.id'], ),
    sa.ForeignKeyConstraint(['press_out_id'], ['EQ_COMPRESSOR_TYPE_PRESSURE_OUT.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица номиналов СПЧ'
    )
    op.create_table('FIELD',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True, comment='Название месторождения'),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('name_prefix', sa.String(), nullable=True, comment='Префикс имени'),
    sa.Column('code', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['COMPANY.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица месторождений'
    )
    op.create_table('DKS',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('field_id', sa.Integer(), nullable=True),
    sa.Column('name_prefix', sa.String(), nullable=True, comment='Префикс имени'),
    sa.Column('code', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['field_id'], ['FIELD.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица ДКС'
    )
    op.create_table('EQ_COMPRESSOR_UNIT',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True, comment='Уникальное имя ГДХ'),
    sa.Column('k_value', sa.Float(), nullable=True, comment='Коэф-т политропы, д.ед'),
    sa.Column('r_value', sa.Float(), nullable=True, comment='Постоянная Больцмана поделеная на молярную массу'),
    sa.Column('t_in', sa.Float(), nullable=True, comment='Температура, К'),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('dks_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dks_id'], ['DKS.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['EQ_COMPRESSOR_TYPE.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('type_id'),
    comment='Таблица - сущность ГДХ/компрессор'
    )
    op.create_table('EQ_COMPRESSOR_PERFORMANCE_CURVE',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('head', sa.Float(), nullable=True, comment='Коэффициент напора'),
    sa.Column('non_dim_rate', sa.Float(), nullable=True, comment='Коэффициент расхода'),
    sa.Column('kpd', sa.Float(), nullable=True, comment='Кпд'),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['unit_id'], ['EQ_COMPRESSOR_UNIT.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Таблица безразмерных параметров'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('EQ_COMPRESSOR_PERFORMANCE_CURVE')
    op.drop_table('EQ_COMPRESSOR_UNIT')
    op.drop_table('DKS')
    op.drop_table('FIELD')
    op.drop_table('EQ_COMPRESSOR_TYPE')
    op.drop_table('UOM')
    op.drop_table('EQ_COMPRESSOR_TYPE_PRESSURE_OUT')
    op.drop_table('EQ_COMPRESSOR_TYPE_POWER')
    op.drop_table('EQ_COMPRESSOR_TYPE_FREQ_NOMINAL')
    op.drop_table('EQ_COMPRESSOR_TYPE_COMP_RATIO')
    op.drop_table('COMPANY')
    # ### end Alembic commands ###
